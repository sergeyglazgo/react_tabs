{"version":3,"sources":["Components/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","content","selectedTabId","onTabSelected","className","map","tab","classNames","id","href","onClick","title","App","state","selectedTab","getContent","find","handleTabChange","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAYaA,EAAwB,SAACC,GACpC,IACEC,EAIED,EAJFC,KACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,cACAC,EACEJ,EADFI,cAGF,OACE,qCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GAAG,OACX,oBAAiBF,UAAWG,IAAW,CAAE,YAAaL,IAAkBI,EAAIE,KAA5E,SACE,oBACEC,KAAK,iBACLC,QAAS,WACPP,EAAcG,IAHlB,UAME,sBAAMF,UAAU,gBAAhB,SAAgC,mBAAGA,UAAU,eAAe,cAAY,WACxE,+BAAOE,EAAIK,YARNL,EAAIE,WAcnB,4BAAIP,QClCJD,EAAc,CAClB,CAAEQ,GAAI,QAASG,MAAO,QAASV,QAAS,eACxC,CAAEO,GAAI,QAASG,MAAO,QAASV,QAAS,eACxC,CAAEO,GAAI,QAASG,MAAO,QAASV,QAAS,gBAQ7BW,EAAb,4MACEC,MAAe,CACbC,YAAa,QACbZ,cAAe,SAHnB,EAMEa,WAAa,WAAO,IAAD,EAGjB,OAFgB,UAAAf,EAAKgB,MAAK,SAAAV,GAAG,OAAIA,EAAIE,KAAO,EAAKK,MAAMX,wBAAvC,eAAuDD,UAAW,MAPtF,EAYEgB,gBAAkB,SAACX,GACjB,EAAKY,SAAS,CACZJ,YAAaR,EAAIK,MACjBT,cAAeI,EAAIE,MAfzB,4CAmBE,WAAU,IAAD,OACP,EAAuCW,KAAKN,MAApCC,EAAR,EAAQA,YAAaZ,EAArB,EAAqBA,cAErB,OACE,sBAAKE,UAAU,MAAf,UACE,cAAC,EAAD,CACEJ,KAAMA,EACNG,cAAe,SAACG,GACd,EAAKW,gBAAgBX,IAEvBJ,cAAeA,EACfD,QAASkB,KAAKJ,eAEhB,qDAEGD,YAlCX,GAAyBM,IAAMC,WAyChBT,ICtDfU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5fb45913.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype HandleTabChange = (tab: Tab) => void;\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string,\n  content: string | null,\n  onTabSelected: HandleTabChange;\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    tabs,\n    content,\n    selectedTabId,\n    onTabSelected,\n  } = props;\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li key={tab.id} className={classNames({ 'is-active': selectedTabId === tab.id })}>\n              <a\n                href=\"#preventReload\"\n                onClick={() => {\n                  onTabSelected(tab);\n                }}\n              >\n                <span className=\"icon is-small\"><i className=\"fas fa-image\" aria-hidden=\"true\" /></span>\n                <span>{tab.title}</span>\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <p>{content}</p>\n    </>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Tabs } from './Components/Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  selectedTab: string,\n  selectedTabId: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedTab: 'Tab 1',\n    selectedTabId: 'tab-1',\n  };\n\n  getContent = () => {\n    const content = tabs.find(tab => tab.id === this.state.selectedTabId)?.content || null;\n\n    return content;\n  };\n\n  handleTabChange = (tab: Tab) => {\n    this.setState({\n      selectedTab: tab.title,\n      selectedTabId: tab.id,\n    });\n  };\n\n  render() {\n    const { selectedTab, selectedTabId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Tabs\n          tabs={tabs}\n          onTabSelected={(tab) => {\n            this.handleTabChange(tab);\n          }}\n          selectedTabId={selectedTabId}\n          content={this.getContent()}\n        />\n        <h1>\n          Selected tab is&nbsp;\n          {selectedTab}\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}